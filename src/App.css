h1 {
  font-family: 'Open Sans', sans-serif;
  font-weight: bold;
  margin: 0;
}

p {
  font-family: 'Open Sans', sans-serif;
  font-size: 14px;
  font-weight: 400;
  line-height: 20px;
  letter-spacing: 0.5px;
  margin: 20px 0 30px;
  max-width: 300px;
}

span {
  font-family: 'Open Sans', sans-serif;
  font-size: 12px;
}

a {
  font-family: 'Open Sans', sans-serif;
  color: #333;
  font-size: 14px;
  text-decoration: none;
  margin: 15px 0;
}

.forgot:hover {
  color: #ff4b2b;
  transition: all 0.2s ease;
}

button {
  border-radius: 20px;
  border: 1px solid #ff4b2b;
  background-color: #ff4b2b;
  color: #fff;
  font-size: 12px;
  font-weight: bold;
  letter-spacing: 1px;
  padding: 12px 45px;
  text-transform: uppercase;
  transition: transform 80ms ease-in;
  cursor: pointer;
  margin-top: 20px;
}

button:active {
  transform: scale(0.95);
}

button:focus {
  outline: none;
}

button.ghost {
  background-color: transparent;
  border: 1px solid #fff;
}

form {
  background-color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  padding: 0 50px;
  height: 100%;
  text-align: center;
}

input {
  background-color: #eee;
  border: none;
  padding: 12px 15px;
  margin: 8px 0;
  width: 100%;
  border-radius: 20px;
}

input:focus {
  outline: none;
}

.social-container {
  margin: 20px 0;
}

.social-container a {
  border: 1px solid #ddd;
  border-radius: 50%;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  margin-left: 5px;
  height: 40px;
  width: 40px;
  transition: transform 80ms ease-in;
}

.social-container a:nth-child(1):hover {
  background-color: #3578e5;
  color: #fff;
  transition: all 0.2s ease;
}

.social-container a:nth-child(2):hover {
  background-color: #dd4839;
  color: #fff;
  transition: all 0.2s ease;
}

.social-container a:nth-child(3):hover {
  background-color: #0077b5;
  color: #fff;
  transition: all 0.2s ease;
}

.social-container a:active {
  transform: scale(0.95);
}

.container {
  background-color: #fff;
  border-radius: 10px;
  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.28), 0 10px 10px rgba(0, 0, 0, 0.22);
  position: relative;
  overflow: hidden;
  width: 768px;
  max-width: 100%;
  min-height: 480px;
  margin: 15vh auto;
}

/* definindo o conteiner do forms com posicao abslute para mudar o left e right */
.form-container {
  position: absolute;
  top: 0;
  height: 100%;
  transition: all 0.6s ease-in-out;
}

/* .sign-in-container {
  left: 0;
  width: 50%;
  z-index: 1;
} */

/* definindo inicialmente a posicao do conteiner todo a esquerda com metaade do container total */
.sign-up-container {
  left: 0;
  width: 50%;
}

/* .container.right-panel-active .sign-in-container {
  transform: translateX(100%);
} */

/* quando a classe eh add faz uma transacao do elemento em 100% */
.container.right-panel-active .sign-up-container {
  transform: translateX(100%);
  opacity: 1;
  z-index: 5;
  animation: show 0.6s;
}

@keyframes show {
  0%,
  49% {
    opacity: 0;
    z-index: 1;
  }

  50%,
  100% {
    opacity: 1;
    z-index: 5;
  }
}

/* inicialmente o overlay eh definido com medade do tamanho dele e overflow hidden para esconder metadade de um texto  */
.overlay-container {
  position: absolute;
  top: 0;
  left: 50%;
  width: 50%;
  height: 100%;
  overflow: hidden;
  transition: transform 0.6s ease-in-out;
  z-index: 100;
}

/* quando add a classe fazer o container transladar em -100% para fazer ele ficar a esquerda do container geral */
.container.right-panel-active .overlay-container {
  transform: translateX(-100%);
}

/* estilo do overlay sendo definido a uma posicao de -100% a esquerda e com o dobro do tamanha para poder cobrir apenas uma metade do container central, ja q ele vai ser limitado pelo seu container */
.overlay {
  background: #ff416c;
  background: -webkit-linear-gradient(to right, #ff4b2b, #ff416c);
  background: linear-gradient(to right, #ff4b2b, #ff416c);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: 0 0;
  color: #fff;
  position: relative;
  left: -100%;
  height: 100%;
  width: 200%;
  transform: translateX(0);
  transition: transform 0.6s ease-in-out;
}

/* quando a classe eh add fazer o container transladar em 50% para a direita */
.container.right-panel-active .overlay {
  transform: translateX(50%);
}

.overlay-panel {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  text-align: center;
  top: 0;
  height: 100%;
  width: 50%;
  transform: translateX(0);
  transition: transform 0.6s ease-in-out;
}

/* efeito para o texto acompanhar a transicao do container */
.overlay-left {
  transform: translateX(-20%);
}

/* quando clicando no botao chama a funcao para mudar o state de left */
.container.right-panel-active .overlay-left {
  transform: translateX(0);
}

/* quando clicando no botao chama a funcao para mudar o state de left */
.overlay-right {
  right: 0;
  transform: translateX(0);
}

/* quando clicando no botao chama a funcao para mudar o state de left */
.container.right-panel-active .overlay-right {
  transform: translateX(20%);
}
